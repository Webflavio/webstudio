

services:
  app:
    init: true
    privileged: true
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - .:/workspaces/webstudio:cached
      - ./.local:/home/node/.local
      - docker-data:/var/lib/docker
    entrypoint: ["/usr/local/share/docker-init.sh"]
    command: sleep infinity
    depends_on:
      db:
        condition: service_healthy
    networks:
      - webstudio_network

  db:
    image: ghcr.io/supabase/postgres:15.1.1.55
    command: ["postgres", "-c", "log_statement=all", "-c", "listen_addresses=*"]
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: webstudio
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webstudio"]
      interval: 10s
      timeout: 5s
      retries: 25
    networks:
      - webstudio_network

  rest:
    container_name: supabase-rest
    image: postgrest/postgrest:v12.2.0
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgresql://postgres:pass@db:5432/webstudio
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret
      PGRST_DB_USE_LEGACY_GUCS: "false"
    command: "postgrest"
    networks:
      - webstudio_network

volumes:
  postgres-data:
  docker-data:

networks:
  webstudio_network:
    driver: bridge
