# شبكة Dokploy - يجب إضافتها للتكامل مع Traefik
networks:
  dokploy-network:
    external: true
  internal:
    driver: bridge

services:
  # قاعدة البيانات PostgreSQL
  db:
    image: ghcr.io/supabase/postgres:15.1.1.55
    container_name: webstudio-db
    restart: unless-stopped
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
    
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-webstudio}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    
    networks:
      - internal
    
    # فحص صحة قاعدة البيانات
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webstudio"]
      interval: 10s
      timeout: 5s
      retries: 25

  # تطبيق Webstudio الرئيسي
  app:
    build:
      context: .
      dockerfile: Dockerfile
    
    container_name: webstudio-app
    restart: unless-stopped
    user: root  # نبدأ كـ root لإصلاح الصلاحيات ثم نتحول لـ node
    
    volumes:
      # ربط مجلد المشروع للتطوير
      - ./:/app:cached
      # الحفاظ على node_modules
      - node-modules:/app/node_modules
      # استخدام volume منفصل لـ pnpm store مع صلاحيات صحيحة
      - pnpm-store:/home/node/.pnpm-store:rw
      - node-cache:/home/node/.cache:rw
      - app-cache:/app/.cache
      - app-build:/app/build
    
    environment:
      # إعدادات قاعدة البيانات
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-webstudio}
      
      # إعدادات Node.js
      NODE_ENV: development
      
      # إعدادات المشروع
      PORT: ${PORT:-3000}
      
      # يمكنك إضافة متغيرات البيئة الأخرى هنا
      
    depends_on:
      db:
        condition: service_healthy
    
    networks:
      - dokploy-network
      - internal
    
    # تعريضات Traefik للوصول من الخارج
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webstudio-app.rule=Host(`${APP_DOMAIN:-webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-app.entrypoints=websecure"
      - "traefik.http.routers.webstudio-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.webstudio-app.loadbalancer.server.port=3002"
      # إعادة توجيه HTTP إلى HTTPS
      - "traefik.http.routers.webstudio-app-http.rule=Host(`${APP_DOMAIN:-webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-app-http.entrypoints=web"
      - "traefik.http.routers.webstudio-app-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    
    command: >
      sh -c "
        echo 'Starting development environment...' &&
        mkdir -p /home/node/.pnpm-store /home/node/.cache &&
        chown -R node:node /home/node/.pnpm-store /home/node/.cache &&
        su node -c 'pnpm config set store-dir /home/node/.pnpm-store' &&
        su node -c 'pnpm install' &&
        su node -c 'pnpm build' &&
        su node -c 'pnpm migrations migrate' &&
        su node -c 'pnpm dev --host 0.0.0.0'
      "

  # PostgREST API (اختياري)
  rest:
    image: postgrest/postgrest:v12.2.0
    container_name: webstudio-rest
    restart: unless-stopped
    
    environment:
      PGRST_DB_URI: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-webstudio}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:-public}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE:-anon}
      PGRST_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY:-3600}
    
    depends_on:
      db:
        condition: service_healthy
    
    networks:
      - dokploy-network
      - internal
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webstudio-rest.rule=Host(`${REST_DOMAIN:-rest.webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-rest.entrypoints=websecure"
      - "traefik.http.routers.webstudio-rest.tls.certresolver=letsencrypt"
      - "traefik.http.services.webstudio-rest.loadbalancer.server.port=3002"

volumes:
  postgres-data:
    driver: local
  node-modules:
    driver: local
  pnpm-store:
    driver: local
  node-cache:
    driver: local
  app-cache:
    driver: local
  app-build:
    driver: local

