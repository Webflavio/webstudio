# شبكة Dokploy - يجب إضافتها للتكامل مع Traefik
networks:
  dokploy-network:
    external: true
  internal:
    driver: bridge

services:
  # قاعدة البيانات PostgreSQL
  db:
    image: ghcr.io/supabase/postgres:15.1.1.55
    container_name: webstudio-db
    restart: unless-stopped
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
    
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-webstudio}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    
    networks:
      - internal
    
    # فحص صحة قاعدة البيانات
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webstudio"]
      interval: 10s
      timeout: 5s
      retries: 25

  # تطبيق Webstudio الرئيسي
  app:
    build:
      context: .
      dockerfile: Dockerfile
    
    container_name: webstudio-app
    restart: unless-stopped
    
    volumes:
      # ربط مجلد المشروع للتطوير - Dokploy يقوم بهذا تلقائياً
      - ./:/workspace:cached
      
      # استخدام named volumes للمجلدات التي تحتاج صلاحيات كتابة
      - node-modules:/workspace/node_modules
      - pnpm-store:/home/node/.pnpm-store
      - node-cache:/home/node/.cache
      - app-cache:/workspace/.cache
      - build-output:/workspace/build
      - dist-output:/workspace/dist
    
    working_dir: /workspace
    
    environment:
      # إعدادات قاعدة البيانات
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-webstudio}
      
      # إعدادات Node.js
      NODE_ENV: development
      
      # إعدادات المشروع
      PORT: ${PORT:-3000}
      
      # تعطيل telemetry
      NEXT_TELEMETRY_DISABLED: 1
      
    depends_on:
      db:
        condition: service_healthy
    
    networks:
      - dokploy-network
      - internal
    
    # تعريضات Traefik للوصول من الخارج
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webstudio-app.rule=Host(`${APP_DOMAIN:-webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-app.entrypoints=websecure"
      - "traefik.http.routers.webstudio-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.webstudio-app.loadbalancer.server.port=3000"
      # إعادة توجيه HTTP إلى HTTPS
      - "traefik.http.routers.webstudio-app-http.rule=Host(`${APP_DOMAIN:-webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-app-http.entrypoints=web"
      - "traefik.http.routers.webstudio-app-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    
    # البدء كـ root لإصلاح الصلاحيات ثم التحويل لـ node user
    user: "0:0"
    
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        set -e
        echo "🚀 Starting Webstudio Development Environment..."
        
        # إصلاح صلاحيات المجلدات
        echo "📁 Setting up directories and permissions..."
        chown -R node:node /home/node/.pnpm-store /home/node/.cache /workspace/node_modules
        
        # التأكد من أن المجلدات موجودة
        mkdir -p /workspace/.cache /workspace/build /workspace/dist
        chown -R node:node /workspace/.cache /workspace/build /workspace/dist
        
        # التحويل لمستخدم node وتشغيل التطبيق
        echo "👤 Switching to node user..."
        exec su-exec node sh -c '
          set -e
          cd /workspace
          
          echo "📦 Configuring pnpm..."
          pnpm config set store-dir /home/node/.pnpm-store
          
          echo "📥 Installing dependencies..."
          pnpm install --frozen-lockfile
          
          echo "🔨 Building project..."
          pnpm build
          
          echo "🗄️ Running migrations..."
          pnpm migrations migrate || echo "⚠️ Migrations failed or not needed"
          
          echo "✅ Starting development server..."
          exec pnpm dev --host 0.0.0.0
        '

  # PostgREST API (اختياري)
  rest:
    image: postgrest/postgrest:v12.2.0
    container_name: webstudio-rest
    restart: unless-stopped
    
    environment:
      PGRST_DB_URI: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-webstudio}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:-public}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE:-anon}
      PGRST_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY:-3600}
    
    depends_on:
      db:
        condition: service_healthy
    
    networks:
      - dokploy-network
      - internal
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webstudio-rest.rule=Host(`${REST_DOMAIN:-rest.webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-rest.entrypoints=websecure"
      - "traefik.http.routers.webstudio-rest.tls.certresolver=letsencrypt"
      - "traefik.http.services.webstudio-rest.loadbalancer.server.port=3002"

volumes:
  postgres-data:
    driver: local
  node-modules:
    driver: local
  pnpm-store:
    driver: local
  node-cache:
    driver: local
  app-cache:
    driver: local
  build-output:
    driver: local
  dist-output:
    driver: local
