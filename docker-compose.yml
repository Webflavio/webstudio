version: "3.9"

# الشبكات
networks:
  dokploy-network:
    external: true
  internal:
    driver: bridge

# الخدمات
services:
  # قاعدة البيانات PostgreSQL
  db:
    image: ghcr.io/supabase/postgres:15.1.1.55
    container_name: webstudio-db
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-webstudio}
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-webstudio}"]
      interval: 10s
      timeout: 5s
      retries: 25

  # تطبيق Webstudio
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webstudio-app
    restart: unless-stopped
    user: root
    volumes:
      - ./:/app:cached
      - node-modules:/app/node_modules
      - pnpm-store:/home/node/.pnpm-store:rw
      - node-cache:/home/node/.cache:rw
      - app-cache:/app/.cache
      - app-build:/app/build
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-webstudio}
      NODE_ENV: development
      PORT: ${PORT:-3000}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dokploy-network
      - internal
    labels:
      # Traefik HTTPS
      - "traefik.enable=true"
      - "traefik.http.routers.webstudio-app.rule=Host(`${APP_DOMAIN:-webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-app.entrypoints=websecure"
      - "traefik.http.routers.webstudio-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.webstudio-app.loadbalancer.server.port=3002"
      # إعادة توجيه HTTP إلى HTTPS
      - "traefik.http.routers.webstudio-app-http.rule=Host(`${APP_DOMAIN:-webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-app-http.entrypoints=web"
      - "traefik.http.routers.webstudio-app-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    command: ["sh", "docker-entrypoint.sh"]


  # PostgREST API (اختياري)
  rest:
    image: postgrest/postgrest:v12.2.0
    container_name: webstudio-rest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-webstudio}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:-public}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE:-anon}
      PGRST_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY:-3600}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dokploy-network
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webstudio-rest.rule=Host(`${REST_DOMAIN:-rest.webstudio.localhost}`)"
      - "traefik.http.routers.webstudio-rest.entrypoints=websecure"
      - "traefik.http.routers.webstudio-rest.tls.certresolver=letsencrypt"
      - "traefik.http.services.webstudio-rest.loadbalancer.server.port=3002"

# تعريف الفوليوم
volumes:
  postgres-data:
  node-modules:
  pnpm-store:
  node-cache:
  app-cache:
  app-build:


