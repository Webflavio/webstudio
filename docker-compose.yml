version: "3.8"

services:
  app:
    init: true
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ..:/workspaces/webstudio:cached
      - ./.local:/home/node/.local
      - docker-data:/var/lib/docker
    entrypoint: ["/usr/local/share/docker-init.sh"]
    command: sleep infinity
    restart: unless-stopped
    networks:
      - webstudio-network
    ports:
      - "3002:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: ghcr.io/supabase/postgres:15.1.1.55
    command: ["postgres", "-c", "log_statement=all", "-c", "listen_addresses=*"]
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: webstudio
      POSTGRES_USER: postgres
    networks:
      - webstudio-network
    ports:
      - "${PGPORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webstudio"]
      interval: 10s
      timeout: 5s
      retries: 25
      start_period: 30s

  rest:
    image: postgrest/postgrest:v12.2.0
    restart: unless-stopped
    networks:
      - webstudio-network
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgresql://postgres:pass@db:5432/webstudio
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:-public}
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${JWT_SECRET:-jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY:-3600}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  postgres-data:
    driver: local
  docker-data:
    driver: local

networks:
  webstudio-network:
    driver: bridge
    name: webstudio-network

