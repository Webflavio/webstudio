version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    container_name: webstudio-dev
    restart: unless-stopped
    command: >
      bash -c "
      corepack enable &&
      pnpm install &&
      pnpm dev
      "
    working_dir: /workspaces/webstudio
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
      PGHOST: db
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: pass
      PGDATABASE: webstudio
    volumes:
      - .:/workspaces/webstudio
    depends_on:
      db:
        condition: service_healthy
    networks:
      - webstudio_network

  db:
    image: ghcr.io/supabase/postgres:15.1.1.55
    container_name: webstudio-db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: webstudio
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webstudio"]
      interval: 10s
      timeout: 5s
      retries: 25
    networks:
      - webstudio_network

  rest:
    image: postgrest/postgrest:v12.2.0
    container_name: supabase-rest
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgresql://postgres:pass@db:5432/webstudio
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret
      PGRST_DB_USE_LEGACY_GUCS: "false"
    networks:
      - webstudio_network

volumes:
  postgres-data:

networks:
  webstudio_network:
    driver: bridge
